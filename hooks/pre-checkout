#!/usr/bin/env bash

set -eo pipefail
set -Eo functrace

report_error() {
  echo error on line: "$1"
  echo failed command: "$2"
}
trap 'report_error ${LINENO} ${BASH_COMMAND}' ERR

get_indirected_env() {
  local index="$1"
  local env_name="$2"

  env_ref="BUILDKITE_PLUGIN_SMOOTH_SECRETS_SECRETS_${index}_${env_name}"
  echo "${!env_ref}"
}

setup_ssh_agent() {
  if [ -z "${SSH_AGENT_PID}" ]; then
    eval "$(ssh-agent -s)"
  fi
}

aws_strategy() {
  local index="$1"
  local secret_key="$(get_indirected_env "$index" "KEY")"
  local secret_type="$(get_indirected_env "$index" "TYPE")"
  local region="$(get_indirected_env "$index" "REGION")"

  echo "Loading secret with key \"${secret_key}\""

  case "${secret_type}" in
    "ssh")
      echo "Fetching secret from secrets manager"
      ssh_key="$(aws secretsmanager get-secret-value --secret-id "${secret_key}" --region "${region}" | jq -r '.SecretString' | base64 -d)"

      ssh_key_file="${SECRETS_DIR}"/"${secret_key/\//\-}" # replace "/" in secret_key with "-"
      touch "${ssh_key_file}"
      chmod 0600 "${ssh_key_file}"
      echo "$ssh_key" >> "${ssh_key_file}"
      SSH_KEY_FILES+=("${ssh_key_file}")

      echo "Adding key to ssh-agent"
      ssh-add "${ssh_key_file}"
      ;;
    *)
      echo "Secret type \"${secret_type}\" not supported"
      exit 1
      ;;
  esac
}

SECRETS_DIR="/etc/buildkite-agent/buildkite-secrets/${BUILDKITE_BUILD_ID}/${BUILDKITE_JOB_ID}"
export SECRETS_DIR
mkdir -p "${SECRETS_DIR}"

setup_ssh_agent

declare -a SSH_KEY_FILES
export SSH_KEY_FILES

i=0
echo "--- :closed_lock_with_key: Setting up secrets"
while true; do
  strategy="$(get_indirected_env "$i" "STRATEGY")"

  if [ -z "$strategy" ]; then
    echo "Secrets configured."
    exit 0
  fi

  case "$strategy" in
    "aws-secrets-manager")
      aws_strategy "$i"
      ;;
    *)
      echo "Strategy \"${strategy}\" not supported"
      exit 1
      ;;
  esac

  i=$((i+=1))
done
